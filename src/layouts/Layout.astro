---
import Footer from "../section/Footer.astro";
import Header from "../section/Header.astro";

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Gabarito:wght@400..900&display=swap"
      rel="stylesheet"
    />
    <title>{title}</title>
  </head>
  <body>
    <Header />
    <div
      class="flex flex-col justify-between items-center min-h-screen px-6 pb-16 gap-16"
    >
      <main
        class="flex flex-col gap-8 items-center lg:px-30 sm:px-10 max-w-7xl"
      >
        <slot />
      </main>
      <Footer />
    </div>
    <script>
      document.addEventListener("DOMContentLoaded", () => {
        const observer = new IntersectionObserver(
          (entries) => {
            entries.forEach((entry) => {
              if (entry.isIntersecting) {
                entry.target.classList.add("opacity-100", "translate-y-0");
                entry.target.classList.remove("opacity-0", "translate-y-10");
              }
            });
          },
          {
            threshold: 0.2, // Trigger when 20% of the element is visible
          }
        );

        // Select all scroll-content elements to observe
        document
          .querySelectorAll(".scroll-content")
          .forEach((el) => observer.observe(el));
      });
      document.addEventListener("DOMContentLoaded", () => {
        document.querySelectorAll(".scroll-link").forEach((link) => {
          link.addEventListener(
            "click",
            function (this: HTMLAnchorElement, event) {
              event.preventDefault(); // Prevent default jump

              const href = this.getAttribute("href");
              if (href) {
                const offset = 80; // Adjust this value based on your header height
              }
              const targetId = this.getAttribute("href")?.substring(1);
              const target = targetId
                ? document.getElementById(targetId)
                : null;
              const offset = 120; // Adjust this value based on your header height

              if (target) {
                const topPosition = target.offsetTop - offset;
                window.scrollTo({ top: topPosition, behavior: "smooth" });
              }
            }
          );
        });
      });
    </script>
  </body>
</html>

<style is:global>
  @tailwind base;
  @tailwind components;
  @tailwind utilities;

  html {
    scroll-behavior: smooth;
  }

  :root {
    --background: #ffffff;
    --foreground: #003669;
    --primary-color: #0070e1;
    --secondary-color: #004b95;
    --floating-color: #ecf5fd;
    --ambience-color: #bcd7f3;
    --tint-color: 0, 75, 149; /* Blue tint */
  }

  :root.dark {
    --background: #202020;
    --foreground: #f2cbdc;
    --primary-color: #f568a5;
    --secondary-color: #e59fbd;
    --floating-color: #2e2227;
    --ambience-color: #3a2f34;
    --tint-color: 229, 159, 189; /* Pink tint */
  }

  body {
    color: var(--foreground);
    background: var(--background);
    font-family: "Gabarito", Arial, Helvetica, sans-serif;
  }

  @layer utilities {
    .text-balance {
      text-wrap: balance;
    }
  }
</style>
